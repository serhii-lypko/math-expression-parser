import { Token } from "./tokenizer.ts";

const { log, error } = console;

// every operator follows all of its operands

// formally speaking, RPN is generated by the post-order traversal of an AST

export class Parser {
  tokenStream: Token[];
  outputQueue: [];
  operatorsStack: [];

  constructor(tokensStream: Token[]) {
    this.tokenStream = tokensStream;
    this.outputQueue = [];
    this.operatorsStack = [];
  }

  // 5 + (3 - 1)

  public rpn() {
    this.tokenStream.forEach((t) => {
      const isOperator = t.isOperator;

      if (isOperator) {
        //
      }

      //
    });
  }

  operatorAssoc() {}

  operatorPrecedence() {}
}

export default Parser;
